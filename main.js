(()=>{"use strict";class t{static createTicketElement(t){const e=document.createElement("div");return e.className="ticket "+(t.status?"done":""),e.dataset.id=t.id,e.innerHTML=`\n      <div class="ticket-main">\n        <div class="ticket-status">\n          <input type="checkbox" ${t.status?"checked":""}>\n        </div>\n        <div class="ticket-name">${t.name}</div>\n        <div class="ticket-date">${new Date(t.created).toLocaleString()}</div>\n        <div class="ticket-actions">\n          <button class="edit-btn">✎</button>\n          <button class="delete-btn">×</button>\n        </div>\n      </div>\n      <div class="ticket-description hidden">${t.description}</div>\n    `,e}static createModal(t,e=null){const n=document.createElement("div");return n.className="modal",n.innerHTML=`\n      <div class="modal-content">\n        <h2>${t}</h2>\n        <form class="ticket-form">\n          <input type="hidden" id="ticket-id" value="${e?e.id:""}">\n          <div class="form-group">\n            <label for="ticket-name">Название:</label>\n            <input type="text" id="ticket-name" value="${e?e.name:""}" required>\n          </div>\n          <div class="form-group">\n            <label for="ticket-description">Описание:</label>\n            <textarea id="ticket-description">${e?e.description:""}</textarea>\n          </div>\n          <div class="form-actions">\n            <button type="button" class="cancel-btn">Отмена</button>\n            <button type="submit">Сохранить</button>\n          </div>\n        </form>\n      </div>\n    `,n}static createConfirmModal(){const t=document.createElement("div");return t.className="modal",t.innerHTML='\n      <div class="modal-content">\n        <h2>Подтверждение удаления</h2>\n        <p>Вы уверены, что хотите удалить этот тикет?</p>\n        <div class="form-actions">\n          <button type="button" class="cancel-btn">Отмена</button>\n          <button type="button" class="confirm-delete-btn">Удалить</button>\n        </div>\n      </div>\n    ',t}}const e=async(t={})=>{const{method:e,id:n,body:i,callback:c}=t,s=`http://localhost:8070/?method=${e}${n?`&id=${n}`:""}`;try{const t=await fetch(s,{method:i?"POST":"GET",headers:{"Content-Type":"application/json"},body:i?JSON.stringify(i):void 0});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const e=await t.json();return c&&c(e),e}catch(t){return console.error("Error:",t),c&&c(null,t),null}};const n=document.getElementById("root"),i=new class{list(t){return e({method:"allTickets",callback:t})}get(t,n){return e({method:"ticketById",id:t,callback:n})}create(t,n){return e({method:"createTicket",body:t,callback:n})}update(t,n,i){return e({method:"updateById",id:t,body:n,callback:i})}delete(t,n){return e({method:"deleteById",id:t,callback:n})}},c=new class{constructor(t,e){if(!(t instanceof HTMLElement))throw new Error("This is not HTML element!");this.container=t,this.ticketService=e,this.tickets=[],this.currentTicket=null}init(){this.render(),this.loadTickets(),this.setupEventListeners()}render(){this.container.innerHTML='\n      <div class="helpdesk">\n        <header class="header">\n          <h1>HelpDesk</h1>\n          <button class="add-ticket-btn">Добавить тикет</button>\n        </header>\n        <div class="tickets-list"></div>\n      </div>\n    '}loadTickets(){this.ticketService.list((t=>{this.tickets=t,this.renderTickets()}))}renderTickets(){const e=this.container.querySelector(".tickets-list");e.innerHTML="",this.tickets.forEach((n=>{const i=t.createTicketElement(n);e.appendChild(i)}))}setupEventListeners(){this.container.addEventListener("click",(t=>{t.target.classList.contains("add-ticket-btn")&&this.showAddModal()}));this.container.querySelector(".tickets-list").addEventListener("click",(t=>{const e=t.target.closest(".ticket");if(!e)return;const n=e.dataset.id;if("checkbox"!==t.target.type){if(t.target.classList.contains("edit-btn"))return t.stopPropagation(),void this.showEditModal(n);if(t.target.classList.contains("delete-btn"))return t.stopPropagation(),void this.showDeleteModal(n);if(t.target.closest(".ticket-main")){e.querySelector(".ticket-description").classList.toggle("hidden")}}else this.toggleTicketStatus(n,t.target.checked)}))}showAddModal(){const e=t.createModal("Добавить тикет");this.setupFormModal(e,null,(t=>{this.ticketService.create(t,(()=>{this.loadTickets()}))})),document.body.appendChild(e)}showEditModal(e){this.ticketService.get(e,(n=>{const i=t.createModal("Редактировать тикет",n);this.setupFormModal(i,n,(t=>{this.ticketService.update(e,t,(()=>{this.loadTickets()}))})),document.body.appendChild(i)}))}showDeleteModal(e){const n=t.createConfirmModal(),i=n.querySelector(".confirm-delete-btn"),c=n.querySelector(".cancel-btn");i.addEventListener("click",(()=>{this.ticketService.delete(e,(()=>{this.loadTickets(),n.remove()}))})),c.addEventListener("click",(()=>{n.remove()})),document.body.appendChild(n)}setupFormModal(t,e,n){const i=t.querySelector(".ticket-form"),c=t.querySelector(".cancel-btn");i.addEventListener("submit",(c=>{c.preventDefault();const s={name:i.querySelector("#ticket-name").value,description:i.querySelector("#ticket-description").value,status:!!e&&e.status};n(s),t.remove()})),c.addEventListener("click",(()=>{t.remove()})),t.addEventListener("click",(e=>{e.target===t&&t.remove()}))}toggleTicketStatus(t,e){this.ticketService.update(t,{status:e},(()=>{this.loadTickets()}))}}(n,i);c.init()})();